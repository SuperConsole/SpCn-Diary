{"componentChunkName":"component---src-templates-blog-post-js","path":"/190615/","webpackCompilationHash":"364bd93ca007b840ca6c","result":{"data":{"site":{"siteMetadata":{"title":"SpXn-Blog","author":"_spxn"}},"markdownRemark":{"id":"a7eba61b-e53e-5d30-9dd5-9cdae70f1267","excerpt":"先日にTorネットワークを用いてIPアドレスを隠蔽する方法を記事にしたが、今回は通信自体の隠蔽について。VPNGate with Proxyを用いることでVPNでの通信を可能にし、情報の盗聴を防ぐことができます。また、末端接続先(Webサイトなど)からはVPNサーバのIP…","html":"<p>　先日にTorネットワークを用いてIPアドレスを隠蔽する方法を記事にしたが、今回は通信自体の隠蔽について。VPNGate with Proxyを用いることでVPNでの通信を可能にし、情報の盗聴を防ぐことができます。また、末端接続先(Webサイトなど)からはVPNサーバのIPアドレスしか見られない状態になります。<br>\nしかしVPNサーバが情報を開示した場合はIPアドレスが丸わかりになるので悪用厳禁。  </p>\n<p>通信方法(Debian9):  </p>\n<ol>\n<li>VPNGate With Proxyに必要なアプリケーションをインストールする<br>\n<code class=\"language-text\">$apt install gir1.2-appindicator3-0.1 gir1.2-notify-0.7 python-gobject</code>  </li>\n<li>VPNGate with Proxyをインストール(クローン→解凍)する(・・・部はGithubのドメイン)<br>\n<code class=\"language-text\">$git clone ・・・/Dragon2fly/vpngate-with-proxy</code><br>\n(*クローンしたディレクトリ配下にアプリケーションがある)   </li>\n<li>VPNGate with Proxyを起動する<br>\n<code class=\"language-text\">$./vpngate-with-proxy/run</code>  </li>\n<li>一覧から接続したいサーバを選択し、番号をコマンドラインに入力する<br>\n(サーバのindexが0の場合) >>0  </li>\n<li>コネクションの確立後、IPアドレスがサーバのものになっているか確認する<br>\n<code class=\"language-text\">$curl -sL ipinfo.io</code>  </li>\n</ol>\n<p>以上。また、VPN Gateway with Proxyは筑波大学が提供するサービス「VPN Gate」の非公式Linuxクライアントである。利用する際は自己責任で。  </p>\n<p>この記事を書く上で本当は「VPN Over Tor」というTorを経由した後にVPN通信を行ってインターネットに接続する環境を構築したかったがTor経由でのVPN Gateway with Proxyのサーバへの接続がうまくいかずに断念した。原因は今も模索中であるがTorネットワークは一般的なプロキシとはやや違う仕組みで動いているのでいろいろ設定をする必要があると考えている。保証のきいたVPNサービスを利用するのが無難だが向きになっている自分がいるので一つ一つ自分のペースで対処していきます。次回はペネトレーションテストツールを使ってみたりしようかなと思っています。おわり。</p>","frontmatter":{"title":"VPNGate with Proxyを用いた通信の秘匿","date":"June 15, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/190615/","previous":{"fields":{"slug":"/190614/"},"frontmatter":{"title":"防衛のためのTorネットワーク"}},"next":{"fields":{"slug":"/190702/"},"frontmatter":{"title":"Apache Struts 2におけるリモートコード実行(CVE-2018-11776)の脆弱性検証"}}}}}